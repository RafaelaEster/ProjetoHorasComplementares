{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluizio\\\\ProjetoHorasComplementares\\\\frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Box, Typography } from '@mui/material';\nimport { UserAuth } from '../context/AuthContext'; // Caminho correto para o AuthContext\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    googleSignIn,\n    user\n  } = UserAuth();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleGoogleLogin = async () => {\n    try {\n      await googleSignIn();\n      if (user) {\n        // Redireciona com base no domínio do e-mail\n        if (user.email.endsWith('@aluno')) {\n          navigate('/aluno');\n        } else if (user.email.endsWith('@ifsc')) {\n          navigate('/professor');\n        } else {\n          setError('E-mail inválido! Não corresponde aos domínios esperados.');\n        }\n      }\n    } catch (err) {\n      setError('Erro ao fazer login com o Google.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    mt: 5,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleGoogleLogin,\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      children: \"Entrar com Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"iYeoHZ50hDVhDOjNvGr4rV7yYW4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Box","Typography","UserAuth","useNavigate","jsxDEV","_jsxDEV","Login","_s","googleSignIn","user","error","setError","navigate","handleGoogleLogin","email","endsWith","err","console","display","flexDirection","alignItems","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","fullWidth","sx","_c","$RefreshReg$"],"sources":["C:/Users/Aluizio/ProjetoHorasComplementares/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Box, Typography } from '@mui/material';\r\nimport { UserAuth } from '../context/AuthContext';  // Caminho correto para o AuthContext\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const { googleSignIn, user } = UserAuth();\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await googleSignIn();\r\n      if (user) {\r\n        // Redireciona com base no domínio do e-mail\r\n        if (user.email.endsWith('@aluno')) {\r\n          navigate('/aluno');\r\n        } else if (user.email.endsWith('@ifsc')) {\r\n          navigate('/professor');\r\n        } else {\r\n          setError('E-mail inválido! Não corresponde aos domínios esperados.');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('Erro ao fazer login com o Google.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mt={5}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Login\r\n      </Typography>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={handleGoogleLogin}\r\n        fullWidth\r\n        sx={{ mt: 2 }}\r\n      >\r\n        Entrar com Google\r\n      </Button>\r\n      {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error}</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AACvD,SAASC,QAAQ,QAAQ,wBAAwB,CAAC,CAAE;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,YAAY;IAAEC;EAAK,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACzC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAML,YAAY,CAAC,CAAC;MACpB,IAAIC,IAAI,EAAE;QACR;QACA,IAAIA,IAAI,CAACK,KAAK,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;UACjCH,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM,IAAIH,IAAI,CAACK,KAAK,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;UACvCH,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM;UACLD,QAAQ,CAAC,0DAA0D,CAAC;QACtE;MACF;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZL,QAAQ,CAAC,mCAAmC,CAAC;MAC7CM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEX,OAAA,CAACL,GAAG;IAACkB,OAAO,EAAC,MAAM;IAACC,aAAa,EAAC,QAAQ;IAACC,UAAU,EAAC,QAAQ;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,gBACnEjB,OAAA,CAACJ,UAAU;MAACsB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvB,OAAA,CAACN,MAAM;MACLwB,OAAO,EAAC,WAAW;MACnBM,KAAK,EAAC,WAAW;MACjBC,OAAO,EAAEjB,iBAAkB;MAC3BkB,SAAS;MACTC,EAAE,EAAE;QAAEX,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EACf;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlB,KAAK,iBAAIL,OAAA,CAACJ,UAAU;MAAC4B,KAAK,EAAC,OAAO;MAACG,EAAE,EAAE;QAAEX,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAAEZ;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAA8B,EAAA,GAHxB3B,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}