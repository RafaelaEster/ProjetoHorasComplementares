{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Documentos\\\\ProjetoHorasComplementares\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLoginSuccess = async credentialResponse => {\n    const {\n      credential\n    } = credentialResponse; // Acessa o token de credencial\n    console.log(\"Token de credencial:\", credential);\n    try {\n      const response = await fetch(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${credential}`\n        }\n      });\n      if (!response.ok) {\n        const errorDetails = await response.json(); // Obter detalhes do erro\n        console.error(\"Erro na resposta da API:\", errorDetails);\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorDetails.error_description}`);\n      }\n      const userProfile = await response.json();\n      console.log(\"Perfil do usuário:\", userProfile);\n      setName(userProfile.name);\n      setEmail(userProfile.email);\n      setIsLoggedIn(true);\n      setErrorMessage(''); // Limpa mensagem de erro\n    } catch (error) {\n      console.error(\"Erro ao obter informações do usuário:\", error);\n      setErrorMessage(\"Erro ao obter informações do usuário. Por favor, tente novamente.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"330895842307-cprcpq4q042vvl6mcjqlvgpem1ip8nf4.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login com Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: () => {\n          console.log('Login Failed');\n          setErrorMessage(\"Erro ao fazer login. Por favor, tente novamente.\"); // Mensagem de erro para falha de login\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Informa\\xE7\\xF5es do Usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nome: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Por favor, fa\\xE7a login para ver suas informa\\xE7\\xF5es.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"cOMzS2BPc7O1+AdPa6DqZ4j6lMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","App","_s","name","setName","email","setEmail","isLoggedIn","setIsLoggedIn","errorMessage","setErrorMessage","handleLoginSuccess","credentialResponse","credential","console","log","response","fetch","method","headers","Authorization","ok","errorDetails","json","error","Error","status","error_description","userProfile","clientId","children","className","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","color","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Documentos/ProjetoHorasComplementares/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n\r\nfunction App() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLoginSuccess = async (credentialResponse) => {\r\n        const { credential } = credentialResponse; // Acessa o token de credencial\r\n        console.log(\"Token de credencial:\", credential);\r\n\r\n        try {\r\n            const response = await fetch(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${credential}`,\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorDetails = await response.json(); // Obter detalhes do erro\r\n                console.error(\"Erro na resposta da API:\", errorDetails);\r\n                throw new Error(`HTTP error! status: ${response.status}, message: ${errorDetails.error_description}`);\r\n            }\r\n\r\n            const userProfile = await response.json();\r\n            console.log(\"Perfil do usuário:\", userProfile);\r\n            setName(userProfile.name);\r\n            setEmail(userProfile.email);\r\n            setIsLoggedIn(true);\r\n            setErrorMessage(''); // Limpa mensagem de erro\r\n        } catch (error) {\r\n            console.error(\"Erro ao obter informações do usuário:\", error);\r\n            setErrorMessage(\"Erro ao obter informações do usuário. Por favor, tente novamente.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"330895842307-cprcpq4q042vvl6mcjqlvgpem1ip8nf4.apps.googleusercontent.com\">\r\n            <div className=\"container\" style={{ textAlign: \"center\" }}>\r\n                <h1>Login com Google</h1>\r\n                <GoogleLogin\r\n                    onSuccess={handleLoginSuccess}\r\n                    onError={() => {\r\n                        console.log('Login Failed');\r\n                        setErrorMessage(\"Erro ao fazer login. Por favor, tente novamente.\"); // Mensagem de erro para falha de login\r\n                    }}\r\n                />\r\n                {isLoggedIn ? (\r\n                    <div>\r\n                        <h2>Informações do Usuário</h2>\r\n                        <p>Nome: {name}</p>\r\n                        <p>Email: {email}</p>\r\n                    </div>\r\n                ) : (\r\n                    <p>Por favor, faça login para ver suas informações.</p>\r\n                )}\r\n                {errorMessage && (\r\n                    <p style={{ color: 'red' }}>{errorMessage}</p>\r\n                )}\r\n            </div>\r\n        </GoogleOAuthProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}