{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Documentos\\\\ProjetoHorasComplementares\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, createContext, useEffect, useState } from 'react';\nimport { GoogleAuthProvider, signInWithPopup, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2'; // Importando SweetAlert para exibir mensagens de erro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // Hook para redirecionamento\n\n  // Função de login com Google\n  const googleSignIn = async () => {\n    const provider = new GoogleAuthProvider();\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const userEmail = result.user.email;\n\n      // Verificar se o e-mail tem o domínio correto\n      if (userEmail.endsWith('@aluno.ifsc.edu.br') || userEmail.endsWith('@ifsc.edu.br')) {\n        setUser(result.user); // Define o estado do usuário\n        navigate('/dashboard'); // Redireciona para o dashboard\n      } else {\n        // Exibe mensagem para e-mails inválidos e desloga automaticamente\n        Swal.fire({\n          title: 'Erro!',\n          text: 'E-mail não reconhecido. Use um e-mail válido (@aluno.ifsc.edu.br ou @ifsc.edu.br).',\n          icon: 'error',\n          confirmButtonText: 'OK'\n        });\n        await signOut(auth);\n      }\n    } catch (error) {\n      console.error('Erro no login:', error);\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Não foi possível fazer login. Tente novamente.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n\n  // Função de logout\n  const logOut = async () => {\n    try {\n      await signOut(auth);\n      setUser(null); // Reseta o estado do usuário\n      navigate('/'); // Redireciona para a página inicial\n    } catch (error) {\n      console.error('Erro ao deslogar:', error);\n      Swal.fire({\n        title: 'Erro!',\n        text: 'Não foi possível sair da conta. Tente novamente.',\n        icon: 'error',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n\n  // Verificação contínua do estado de autenticação\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async currentUser => {\n      if (currentUser) {\n        const userEmail = currentUser.email;\n\n        // Verifica se o e-mail tem domínio válido\n        if (userEmail.endsWith('@aluno.ifsc.edu.br') || userEmail.endsWith('@ifsc.edu.br')) {\n          setUser(currentUser); // Define o estado do usuário\n        } else {\n          // Exibe mensagem de erro para e-mails inválidos e desloga automaticamente\n          Swal.fire({\n            title: 'Erro!',\n            text: 'Apenas usuários com e-mail institucional têm acesso.',\n            icon: 'error',\n            confirmButtonText: 'OK'\n          });\n          await signOut(auth);\n          setUser(null); // Reseta o estado do usuário\n        }\n      } else {\n        setUser(null); // Remove o usuário se não estiver autenticado\n      }\n    });\n    return () => {\n      unsubscribe(); // Remove o listener ao desmontar o componente\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      googleSignIn,\n      logOut,\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthContextProvider;\nexport const UserAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(UserAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = UserAuth;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthContextProvider\");\n$RefreshReg$(_c2, \"UserAuth\");","map":{"version":3,"names":["useContext","createContext","useEffect","useState","GoogleAuthProvider","signInWithPopup","signOut","onAuthStateChanged","auth","useNavigate","Swal","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","user","setUser","navigate","googleSignIn","provider","result","userEmail","email","endsWith","fire","title","text","icon","confirmButtonText","error","console","logOut","unsubscribe","currentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserAuth","_s2","_c2","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Documentos/ProjetoHorasComplementares/frontend/src/context/AuthContext.js"],"sourcesContent":["import { useContext, createContext, useEffect, useState } from 'react';\r\nimport {\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2'; // Importando SweetAlert para exibir mensagens de erro\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate(); // Hook para redirecionamento\r\n\r\n  // Função de login com Google\r\n  const googleSignIn = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const userEmail = result.user.email;\r\n\r\n      // Verificar se o e-mail tem o domínio correto\r\n      if (userEmail.endsWith('@aluno.ifsc.edu.br') || userEmail.endsWith('@ifsc.edu.br')) {\r\n        setUser(result.user); // Define o estado do usuário\r\n        navigate('/dashboard'); // Redireciona para o dashboard\r\n      } else {\r\n        // Exibe mensagem para e-mails inválidos e desloga automaticamente\r\n        Swal.fire({\r\n          title: 'Erro!',\r\n          text: 'E-mail não reconhecido. Use um e-mail válido (@aluno.ifsc.edu.br ou @ifsc.edu.br).',\r\n          icon: 'error',\r\n          confirmButtonText: 'OK',\r\n        });\r\n        await signOut(auth);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro no login:', error);\r\n      Swal.fire({\r\n        title: 'Erro!',\r\n        text: 'Não foi possível fazer login. Tente novamente.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Função de logout\r\n  const logOut = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null); // Reseta o estado do usuário\r\n      navigate('/'); // Redireciona para a página inicial\r\n    } catch (error) {\r\n      console.error('Erro ao deslogar:', error);\r\n      Swal.fire({\r\n        title: 'Erro!',\r\n        text: 'Não foi possível sair da conta. Tente novamente.',\r\n        icon: 'error',\r\n        confirmButtonText: 'OK',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Verificação contínua do estado de autenticação\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n      if (currentUser) {\r\n        const userEmail = currentUser.email;\r\n\r\n        // Verifica se o e-mail tem domínio válido\r\n        if (userEmail.endsWith('@aluno.ifsc.edu.br') || userEmail.endsWith('@ifsc.edu.br')) {\r\n          setUser(currentUser); // Define o estado do usuário\r\n        } else {\r\n          // Exibe mensagem de erro para e-mails inválidos e desloga automaticamente\r\n          Swal.fire({\r\n            title: 'Erro!',\r\n            text: 'Apenas usuários com e-mail institucional têm acesso.',\r\n            icon: 'error',\r\n            confirmButtonText: 'OK',\r\n          });\r\n          await signOut(auth);\r\n          setUser(null); // Reseta o estado do usuário\r\n        }\r\n      } else {\r\n        setUser(null); // Remove o usuário se não estiver autenticado\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe(); // Remove o listener ao desmontar o componente\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ googleSignIn, logOut, user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const UserAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}