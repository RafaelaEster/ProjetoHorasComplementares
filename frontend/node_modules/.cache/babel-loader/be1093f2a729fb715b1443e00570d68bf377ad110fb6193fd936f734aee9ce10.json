{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\OneDrive\\\\Documentos\\\\ProjetoHorasComplementares\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLoginSuccess = async credentialResponse => {\n    const {\n      credential\n    } = credentialResponse; // Acessa o token de credencial\n    console.log(\"Token de credencial:\", credential);\n    try {\n      // Use o token para fazer uma requisição para obter os detalhes do usuário\n      const response = await fetch(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${credential}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const userProfile = await response.json();\n      console.log(\"Perfil do usuário:\", userProfile);\n      setName(userProfile.name);\n      setEmail(userProfile.email);\n      setIsLoggedIn(true);\n      setErrorMessage(''); // Limpa mensagem de erro\n    } catch (error) {\n      console.error(\"Erro ao obter informações do usuário:\", error);\n      setErrorMessage(\"Erro ao obter informações do usuário. Por favor, tente novamente.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"330895842307-cprcpq4q042vvl6mcjqlvgpem1ip8nf4.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLoginSuccess,\n        onError: () => {\n          console.log('Login Failed');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Por favor, fa\\xE7a login para ver suas informa\\xE7\\xF5es.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          textAlign: \"center\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"cOMzS2BPc7O1+AdPa6DqZ4j6lMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","App","_s","name","setName","email","setEmail","isLoggedIn","setIsLoggedIn","errorMessage","setErrorMessage","handleLoginSuccess","credentialResponse","credential","console","log","response","fetch","method","headers","Authorization","ok","Error","status","userProfile","json","error","clientId","children","className","onSuccess","onError","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","color","_c","$RefreshReg$"],"sources":["C:/Users/gabri/OneDrive/Documentos/ProjetoHorasComplementares/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n\r\nfunction App() {\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\r\n\tconst handleLoginSuccess = async (credentialResponse) => {\r\n\t\tconst { credential } = credentialResponse; // Acessa o token de credencial\r\n        console.log(\"Token de credencial:\", credential);\r\n        \r\n\t\ttry {\r\n\t\t\t// Use o token para fazer uma requisição para obter os detalhes do usuário\r\n\t\t\tconst response = await fetch(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAuthorization: `Bearer ${credential}`,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst userProfile = await response.json();\r\n\t\t\tconsole.log(\"Perfil do usuário:\", userProfile);\r\n\t\t\tsetName(userProfile.name);\r\n\t\t\tsetEmail(userProfile.email);\r\n\t\t\tsetIsLoggedIn(true);\r\n\t\t\tsetErrorMessage(''); // Limpa mensagem de erro\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Erro ao obter informações do usuário:\", error);\r\n\t\t\tsetErrorMessage(\"Erro ao obter informações do usuário. Por favor, tente novamente.\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GoogleOAuthProvider clientId=\"330895842307-cprcpq4q042vvl6mcjqlvgpem1ip8nf4.apps.googleusercontent.com\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<GoogleLogin\r\n\t\t\t\t\tonSuccess={handleLoginSuccess}\r\n\t\t\t\t\tonError={() => {\r\n\t\t\t\t\t\tconsole.log('Login Failed');\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<div style={{ textAlign: \"center\" }}>\r\n\t\t\t\t\t\t<h1>User Information</h1>\r\n\t\t\t\t\t\t<p>Name: {name}</p>\r\n\t\t\t\t\t\t<p>Email: {email}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p style={{ textAlign: \"center\" }}>Por favor, faça login para ver suas informações.</p>\r\n\t\t\t\t)}\r\n\t\t\t\t{errorMessage && (\r\n\t\t\t\t\t<p style={{ color: 'red', textAlign: \"center\" }}>{errorMessage}</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</GoogleOAuthProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}